{"version":3,"sources":["./src/app/workspace/workspace.component.ts","./src/app/workspace/workspace.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/config.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { ConfigService } from '../services/config.service';\nimport { IModule, IModuleGroup } from '../models/module';\n\n@Component({\n  selector: 'app-workspace',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.css']\n})\nexport class WorkspaceComponent implements OnInit {\n  loadedModules: IModule[] = [\n    {\n      title: '입력',\n      description: '입력 모듈에 관한 설명',\n      index: '',\n      arguments: '',\n      fixed: true,\n      icon: 'texture',\n      background: 'darkGray'\n    },\n    {\n      title: '출력',\n      description: '출력 모듈에 관한 설명',\n      index: '',\n      arguments: '',\n      fixed: true,\n      icon: 'texture',\n      background: 'darkGray'\n    }\n  ];\n\n  orgGroups: IModuleGroup[];\n  groups: IModuleGroup[];\n  groupColors: string[] = ['#4c78a8', '#9ecae9', '#f58518', '#ffbf79', '#54a24b'];\n\n  constructor(private cs: ConfigService) { }\n\n  ngOnInit(): void {\n    this.cs.loadConfig().subscribe((r) => {\n      this.groups = r;\n      this.orgGroups = JSON.parse(JSON.stringify(r));\n    });\n  }\n\n  onTaskDrop(event: CdkDragDrop<IModule[]>): void {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n  }\n\n  noReturnPredicate(): boolean {\n    return false;\n  }\n\n  onReset(): void {\n    this.loadedModules = this.loadedModules.filter(m => m.fixed);\n    this.groups = JSON.parse(JSON.stringify(this.orgGroups));\n  }\n\n  onExecute(): void {\n    let thiss;\n    let ar =[];\n\n    async function sendGet(m)\n    {\n      if(m.result == undefined){\n        let check = setInterval(function() {\n          thiss.cs.getStatus().subscribe((r)=>{\n            \n            if(r.result != undefined){\n              m.result = r.result;\n              m.completed = true;\n              if(ar.length>0)\n              {\n                console.log(ar.length)\n                sendR(ar.shift());\n              }\n              clearInterval(check)\n            }\n          });\n        }, 30000);\n      }\n    }\n\n    async function sendR(m)\n    {\n      thiss.cs.sendRequest({index: m.index, arguments: m.arguments}).subscribe((r) => {\n        console.log(r.result);\n        sendGet(m);\n      });\n    }\n\n    this.loadedModules.slice(1, -1).forEach(async (m) => {\n      thiss = this;\n      //await sendR(m);\n      ar.push(m);\n    });\n    \n    sendR(ar.shift());\n\n  }\n}","<div class=\"wrapper\">\n  <mat-toolbar color=\"primary\">\n    <mat-icon>apps</mat-icon>\n    <span class=\"toolbar-empty-slot\"></span>\n    <span>AlphaGrid Modules</span>\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-raised-button color=\"primary\" (click)=\"onReset()\">\n      <mat-icon>replay</mat-icon>\n      Reset\n    </button>\n    <span class=\"toolbar-empty-slot\"></span>\n    <button mat-raised-button (click)=\"onExecute()\">\n      <mat-icon>play_arrow</mat-icon>\n      Execute\n    </button>\n  </mat-toolbar>\n\n  <div class=\"card-list-wrapper\" cdkDropListGroup>\n    <div class=\"card-list\">\n      <div class=\"card-list-content\" cdkDropList\n           [cdkDropListData]=\"loadedModules\"\n           (cdkDropListDropped)=\"onTaskDrop($event)\">\n        <h2>Execution</h2>\n        <mat-card class=\"card\" *ngFor=\"let m of loadedModules\" cdkDrag\n                  [cdkDragDisabled]=\"m.fixed\"\n                  [ngStyle]=\"{'background-color': m.background? m.background: 'white'}\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"card-icon\"><mat-icon>{{m.icon? m.icon: 'account_tree'}}</mat-icon></div>\n            <mat-card-title>{{m.title}}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content *ngIf=\"!m.fixed\">\n            <div class=\"description\">{{m.description}}</div>\n            <div class=\"detail\"><mat-icon>code</mat-icon>{{m.index}}</div>\n            <div class=\"detail\"><mat-icon>tune</mat-icon>{{m.arguments}}</div>\n            <div class=\"detail\" *ngIf=\"m.completed\"><mat-icon>done</mat-icon>{{m.result}}</div>\n          </mat-card-content>\n        </mat-card>\n\n      </div>\n    </div>\n\n    <div class=\"card-list\" *ngFor=\"let g of groups; let i=index\">\n      <div class=\"card-list-content\" cdkDropList\n           [cdkDropListData]=\"g.modules\"\n           (cdkDropListDropped)=\"onTaskDrop($event)\"\n           [cdkDropListEnterPredicate]=\"noReturnPredicate\"\n           [ngStyle]=\"{'background-color': groupColors[i]}\">\n        <h2>{{g.title}}</h2>\n        <mat-card class=\"card\" *ngFor=\"let m of g.modules\" cdkDrag [cdkDragDisabled]=\"m.fixed\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"card-icon\"><mat-icon>account_tree</mat-icon></div>\n            <mat-card-title>{{m.title}}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"description\">{{m.description}}</div>\n            <div class=\"detail\"><mat-icon>code</mat-icon>{{m.index}}</div>\n            <div class=\"detail\"><mat-icon>tune</mat-icon>{{m.arguments}}</div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kepco-gui';\n}\n","<app-workspace></app-workspace>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WorkspaceComponent } from './workspace/workspace.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorkspaceComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {IConfig, IModuleGroup, IScript, IScriptResult} from '../models/module';\nimport {catchError, map, tap, retry} from 'rxjs/operators';\n\nconst CONFIG_JSON = 'assets/config.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    };\n  }\n  requestURL: string;\n  httpOptions: object;\n\n  private static handleError(error: HttpErrorResponse): Observable<never> {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  loadConfig(): Observable<IModuleGroup []> {\n    return this.http.get<IConfig>(CONFIG_JSON, {responseType: 'json'})\n      .pipe(\n        tap((r) => this.requestURL = r.url),\n        map((r) => r.groups)\n      );\n  }\n\n  getStatus(): Observable<IScriptResult> {\n    return this.http.get<IScriptResult>(this.requestURL, {})\n    .pipe(\n      catchError(ConfigService.handleError)\n    );\n  }\n\n  sendRequest(script: IScript): Observable<IScriptResult> {\n    console.log(this.httpOptions);\n\n    return this.http.post<IScriptResult>(this.requestURL, script, this.httpOptions)\n      .pipe(\n        catchError(ConfigService.handleError)\n      );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}